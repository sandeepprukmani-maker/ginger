#!/usr/bin/env python3
"""
Unified startup script for the entire automation platform
Starts both Engines API (background) and VisionVault UI (foreground)
"""
import subprocess
import time
import sys
import os
import signal

sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

engines_process = None

def signal_handler(sig, frame):
    """Handle Ctrl+C gracefully"""
    print("\n\n🛑 Shutting down servers...")
    if engines_process:
        engines_process.terminate()
        engines_process.wait()
    sys.exit(0)

signal.signal(signal.SIGINT, signal_handler)
signal.signal(signal.SIGTERM, signal_handler)

if __name__ == "__main__":
    print("="*80)
    print("🚀 Starting AI Browser Automation Platform")
    print("="*80)
    
    bin_dir = os.path.dirname(os.path.abspath(__file__))
    
    print("\n📡 Starting Engines API on internal port...")
    engines_process = subprocess.Popen(
        [sys.executable, os.path.join(bin_dir, "run-engines-api")]
    )
    
    time.sleep(2)
    
    if engines_process.poll() is not None:
        print("❌ Engines API failed to start")
        sys.exit(1)
    
    print("✅ Engines API started successfully")
    
    print("\n🌐 Starting VisionVault UI on port 5000...")
    print("="*80)
    print("\n")
    
    try:
        subprocess.run(
            [sys.executable, os.path.join(bin_dir, "run-visionvault-ui")],
            check=True
        )
    except KeyboardInterrupt:
        pass
    finally:
        if engines_process:
            engines_process.terminate()
            engines_process.wait()
