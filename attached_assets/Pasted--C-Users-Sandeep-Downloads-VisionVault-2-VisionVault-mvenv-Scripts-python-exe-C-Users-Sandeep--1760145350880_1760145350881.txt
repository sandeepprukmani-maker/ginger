"C:\Users\Sandeep\Downloads\VisionVault (2)\VisionVault\mvenv\Scripts\python.exe" "C:\Users\Sandeep\Downloads\VisionVault (2)\VisionVault\local_agent.py" 
Starting Browser Automation Agent
Agent ID: 55a6c911-fb35-4e68-b575-17172b3812a4
Server URL: https://ad9dfb03-4d9f-4081-b71a-7ed4641d40e2-00-vk56mx7aw2ez.riker.replit.dev/

Press Ctrl+C to stop the agent

Connecting to server...
Attempting polling connection to https://ad9dfb03-4d9f-4081-b71a-7ed4641d40e2-00-vk56mx7aw2ez.riker.replit.dev/socket.io/?transport=polling&EIO=4
Polling connection accepted with {'sid': '73FvsE2J041Sq8gtAAAG', 'upgrades': ['websocket'], 'pingTimeout': 20000, 'pingInterval': 25000, 'maxPayload': 1000000}
Engine.IO connection established
Sending packet MESSAGE data 0{}
Attempting WebSocket upgrade to wss://ad9dfb03-4d9f-4081-b71a-7ed4641d40e2-00-vk56mx7aw2ez.riker.replit.dev/socket.io/?transport=websocket&EIO=4
WebSocket upgrade was successful
Received packet NOOP data 
Received packet MESSAGE data 2["connected",{"sid":"JcHFvFZjp5GNNLnVAAAH"}]
Received event "connected" [/]
Received packet MESSAGE data 2["agents_update",{"agents":[]}]
Received event "agents_update" [/]
Received packet MESSAGE data 0{"sid":"JcHFvFZjp5GNNLnVAAAH"}
Namespace / is connected
Emitting event "agent_register" [/]
Sending packet MESSAGE data 2["agent_register",{"agent_id":"55a6c911-fb35-4e68-b575-17172b3812a4","browsers":["chromium"]}]
Connected to server: https://ad9dfb03-4d9f-4081-b71a-7ed4641d40e2-00-vk56mx7aw2ez.riker.replit.dev/
Detected browsers: ['chromium']
Connection established! Waiting for tasks...

Received packet MESSAGE data 2["agent_registered",{"status":"success"}]
Received event "agent_registered" [/]
Received packet MESSAGE data 2["agents_update",{"agents":[{"agent_id":"55a6c911-fb35-4e68-b575-17172b3812a4","browsers":["chromium"],"connected_at":"2025-10-11T01:15:09.054185"}]}]
Received event "agents_update" [/]
Agent registered successfully: {'status': 'success'}
Received packet MESSAGE data 2["execution_status",{"test_id":42,"status":"running","message":"Executing on agent with healing in headful mode..."}]
Received event "execution_status" [/]
Received packet MESSAGE data 2["execute_healing_attempt",{"test_id":42,"code":"\nasync def run_test(browser_name='chromium', headless=True):\n    import asyncio\n    await asyncio.sleep(1)  # Ensure browser is ready\n    from playwright.async_api import async_playwright\n    logs = []\n    screenshot = None\n    browser = None\n    page = None\n    try:\n        async with async_playwright() as p:\n            browser = await getattr(p, browser_name).launch(headless=headless)\n            page = await browser.new_page()\n            await page.goto(\"https://practicetestautomation.com/practice-test-login/\")\n            logs.append(\"Navigated to the login page\")\n\n            await page.fill(\"input[name='username']\", \"student\")\n            logs.append(\"Filled username\")\n\n            await page.fill(\"input[name='password']\", \"Password123\")\n            logs.append(\"Filled password\")\n\n            await page.click(\"button[type='submit']\")\n            logs.append(\"Clicked submit button\")\n\n            # CRITICAL: Screenshot BEFORE closing\n            screenshot = await page.screenshot()\n            await browser.close()\n            return {'success': True, 'logs': logs, 'screenshot': screenshot}\n    except Exception as e:\n        logs.append(f\"Error: {str(e)}\")\n        # Try to get screenshot even on error, BEFORE cleanup\n        if page:\n            try:\n                screenshot = await page.screenshot()\n            except:\n                pass\n        if browser:\n            try:\n                await browser.close()\n            except:\n                pass\n        return {'success': False, 'logs': logs, 'screenshot': screenshot}\n","browser":"chromium","mode":"headful","attempt":1}]
Received event "execute_healing_attempt" [/]
Traceback (most recent call last):
  File "C:\Users\Sandeep\Downloads\VisionVault (2)\VisionVault\local_agent.py", line 239, in execute_healing_attempt
    exec(modified_code, global_vars, local_vars)
    ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 12
    playwright_instance = await p.start()
    ^^^^^^^^^^^^^^^^^^^
SyntaxError: expected 'except' or 'finally' block
Emitting event "healing_attempt_result" [/]
Sending packet MESSAGE data 2["healing_attempt_result",{"test_id":42,"success":false,"logs":["expected 'except' or 'finally' block (<string>, line 12)"],"screenshot":null}]
ðŸŽ¯ Starting healing attempt 1 for test 42 in headful mode
âœ… Added page capture injection
âœ… Code modification completed for healing mode
âœ… Code modified for headful healing mode
ðŸ’¥ Healing attempt error: expected 'except' or 'finally' block (<string>, line 12)
Received packet PING data 
Sending packet PONG data 
