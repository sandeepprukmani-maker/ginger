C:\Users\Sandeep\PycharmProjects\agentbuilder\.venv\Scripts\python.exe "C:\Users\Sandeep\PycharmProjects\agentbuilder\local_agent (2).py" 
Starting Browser Automation Agent
Agent ID: a6637bee-a288-44ff-a9ed-2f78947b8631
Server URL: https://516a0565-8bd1-4a28-9d08-4a619ac6cad2-00-12nyfrfprbcxz.spock.replit.dev/

Press Ctrl+C to stop the agent

Connecting to server...
Attempting polling connection to https://516a0565-8bd1-4a28-9d08-4a619ac6cad2-00-12nyfrfprbcxz.spock.replit.dev/socket.io/?transport=polling&EIO=4
Polling connection accepted with {'sid': '8EfewRnE-RbXmeM-AAAK', 'upgrades': ['websocket'], 'pingTimeout': 20000, 'pingInterval': 25000, 'maxPayload': 1000000}
Engine.IO connection established
Sending packet MESSAGE data 0{}
Attempting WebSocket upgrade to wss://516a0565-8bd1-4a28-9d08-4a619ac6cad2-00-12nyfrfprbcxz.spock.replit.dev/socket.io/?transport=websocket&EIO=4
WebSocket upgrade was successful
Received packet NOOP data 
Received packet MESSAGE data 2["connected",{"sid":"yGARN7RXVhIWUj8yAAAL"}]
Received event "connected" [/]
Received packet MESSAGE data 2["agents_update",{"agents":[]}]
Received event "agents_update" [/]
Received packet MESSAGE data 0{"sid":"yGARN7RXVhIWUj8yAAAL"}
Namespace / is connected
Emitting event "agent_register" [/]
Sending packet MESSAGE data 2["agent_register",{"agent_id":"a6637bee-a288-44ff-a9ed-2f78947b8631","browsers":["chromium"]}]
Connected to server: https://516a0565-8bd1-4a28-9d08-4a619ac6cad2-00-12nyfrfprbcxz.spock.replit.dev/
Detected browsers: ['chromium']
Connection established! Waiting for tasks...

Received packet MESSAGE data 2["agent_registered",{"status":"success"}]
Received event "agent_registered" [/]
Received packet MESSAGE data 2["agents_update",{"agents":[{"agent_id":"a6637bee-a288-44ff-a9ed-2f78947b8631","browsers":["chromium"],"connected_at":"2025-10-11T12:09:53.272211"}]}]
Received event "agents_update" [/]
Agent registered successfully: {'status': 'success'}
Received packet MESSAGE data 2["agents_update",{"agents":[{"agent_id":"a6637bee-a288-44ff-a9ed-2f78947b8631","browsers":["chromium"],"connected_at":"2025-10-11T12:09:53.272211"}]}]
Received event "agents_update" [/]
Received packet MESSAGE data 2["agents_update",{"agents":[{"agent_id":"a6637bee-a288-44ff-a9ed-2f78947b8631","browsers":["chromium"],"connected_at":"2025-10-11T12:09:53.272211"}]}]
Received event "agents_update" [/]
Received packet MESSAGE data 2["execution_status",{"test_id":12,"status":"running","message":"Executing on agent with healing in headful mode..."}]
Received event "execution_status" [/]
Received packet MESSAGE data 2["execute_healing_attempt",{"test_id":12,"code":"async def run_test(browser_name='chromium', headless=True):\n    import asyncio\n    await asyncio.sleep(1)  # Ensure browser is ready\n    from playwright.async_api import async_playwright\n    logs = []\n    screenshot = None\n    browser = None\n    page = None\n    try:\n        async with async_playwright() as p:\n            browser = await getattr(p, browser_name).launch(headless=headless)\n            page = await browser.new_page()\n            await page.goto('https://www.jio.com/')\n            await page.click('text=\"sandeep\"')\n            logs.append(\"Clicked on 'sandeep' button\")\n            # CRITICAL: Screenshot BEFORE closing\n            screenshot = await page.screenshot()\n            await browser.close()\n            return {'success': True, 'logs': logs, 'screenshot': screenshot}\n    except Exception as e:\n        logs.append(f\"Error: {str(e)}\")\n        # Try to get screenshot even on error, BEFORE cleanup\n        if page:\n            try:\n                screenshot = await page.screenshot()\n            except:\n                pass\n        if browser:\n            try:\n                await browser.close()\n            except:\n                pass\n        return {'success': False, 'logs': logs, 'screenshot': screenshot}","browser":"chromium","mode":"headful","attempt":1}]
Received event "execute_healing_attempt" [/]
üéØ Starting healing attempt 1 for test 12 in headful mode
‚úÖ Added page capture injection for variable 'page'
‚úÖ Code modification completed - page captured, browser.close() commented out
‚úÖ Code modified for headful healing mode

================================================================================
MODIFIED CODE FOR DEBUGGING:
================================================================================
async def run_test(browser_name='chromium', headless=True):
    import asyncio
    await asyncio.sleep(1)  # Ensure browser is ready
    from playwright.async_api import async_playwright
    logs = []
    screenshot = None
    browser = None
    page = None
    try:
        async with async_playwright() as p:
            browser = await getattr(p, browser_name).launch(headless=headless)
            page = await browser.new_page()
            globals()["__healing_page__"] = page
            await page.goto('https://www.jio.com/')
            await page.click('text="sandeep"')
            logs.append("Clicked on 'sandeep' button")
            # CRITICAL: Screenshot BEFORE closing
            screenshot = await page.screenshot()
            pass  # browser.close() commented for healing
            return {'success': True, 'logs': logs, 'screenshot': screenshot}
    except Exception as e:
        logs.append(f"Error: {str(e)}")
        # Try to get screenshot even on error, BEFORE cleanup
        if page:
            try:
                screenshot = await page.screenshot()
            except:
                pass
        if browser:
            try:
                pass  # browser.close() commented for healing
            except:
                pass
        return {'success': False, 'logs': logs, 'screenshot': screenshot}
================================================================================

Received packet PING data 
Sending packet PONG data 
Received packet PING data 
Sending packet PONG data 
Emitting event "healing_attempt_result" [/]
Sending packet MESSAGE data 2["healing_attempt_result",{"test_id":12,"success":false,"logs":["Error: Page.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for locator(\"text=\\\"sandeep\\\"\")\n"],"screenshot":null}]
‚úÖ Page captured for healing - URL: https://www.jio.com/
Healing attempt 1 for test 12: FAILED
üéØ LOCAL: Failed locator detected: locator("text=\"sandeep\"")
üöÄ LOCAL: Injecting widget immediately (no server delay)
üéØ Injecting element selector widget for test 12 on page: https://www.jio.com/
‚ùå Element selector injection error: Page.evaluate: Target page, context or browser has been closed
‚è≥ Waiting for user to select element (300s timeout)...
‚úÖ User selection completed
üßπ Cleaning up browser after widget interaction...
‚úÖ Browser closed after healing attempt
Received packet PING data 
Sending packet PONG data 
